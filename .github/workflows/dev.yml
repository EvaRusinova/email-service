name: Build and Tag Docker Image

on:
  push:
    branches:
      - dev
      - master

env:
  IMAGE_TAG: latest
  IMAGE_NAME: email-service
  PORT: 8082

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Check out the code from the repository so that the workflow can access your project files.
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Java 17 in the GitHub Actions runner environment using the AdoptOpenJDK distribution.
      - name: Set up Java 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      # Grant execute permissions to the Gradle wrapper script (gradlew) so that it can be executed in the next step.
      - name: Set execute permissions for gradlew
        run: chmod +x gradlew

      # Run the "build" task using the Gradle wrapper to build and test your project.
      - name: Build and Test
        run: ./gradlew build

      # This step builds a Docker image with the specified name and tag based on the current directory (where the Dockerfile is located).
      - name: Build Docker Image
        run: docker build -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .

      # Run the Docker image as a detached container, exposing and mapping the ports.
      - name: Run Docker Image
        run: docker run -d -p ${{ env.PORT }}:${{ env.PORT }} ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}